정규화
	삽입, 수정, 삭제의 이상현상을 제거하기 위해 진행한다.
	데이터 중복을 최소화 할 수 있고 대부분 3차 정규화까지
	진행한다.

	아이디	이름	전공	수업코드	수업명		수업인원
	apple	김사과	컴공과	C001	너무쉬운자바	30
	apple	김사과	컴공과	C002	너무쉬운DBMS	35
	banana	반하나	수학과	C002	너무쉬운DBMS	35

	삽입이상
		새로운 학생이 추가되었고 그 학생은 수강신청한 과목이 없다면
		수업코드에 NULL을 넣거나 혹은 'XXXX' 같은 약속된 코드값을
		삽입해 주어야 한다. 이러한 현상을 삽입 이상이라고 한다.

	갱신이상
		중복 행 중 일부만 변경하여 데이터가 불일치하게 되는 모순의 문제이고
		만약 김사과가 전과해서 새로운 과로 이동을 했다면 두 행의 데이터 모두
		수정을 해주어야 한다. 이러한 현상을 갱신 이상이라고 한다.

	삭제이상
		행을 삭제할 때 꼭 필요한 데이터까지 함께 삭제되는 문제이고
		만약 너무쉬운DBMS 수업이 폐강된다면 반하나 의 행을 모두 삭제하게 된다.
		반하나의 데이터가 남지 않게 되고 이러한 현상을 삭제 이상이라고 한다.

주문 테이블
	이름	나이	우편번호	주소	상품명		상품가격
	김사과	10	1000	역삼동	바지,양말		1000,500
	반하나	20	1001	사당동	바나나		2000
	이체리	30	2001	분당구	필터, 오리, 낭만	1000,2000,3000

1차 정규화
	하나의 컬럼에는 값이 1개씩만 있어야 한다.
	반복적인 컬럼값이 나타나는 경우에는 그 값의 활용이 어려워진다.

	이름	나이	우편번호	주소	상품명	상품가격
	김사과	10	1000	역삼동	바지	1000
	김사과	10	1000	역삼동	양말	500
	반하나	20	1001	사당동	바나나	2000
	이체리	30	2001	분당구	필터	1000
	이체리	30	2001	분당구	오리	2000
	이체리	30	2001	분당구	낭만	3000

2차 정규화
	테이블의 모든 컬럼이 서로 관계가 있어야 한다.
	관계가 없는 컬럼들이 존재한다면 테이블을 나누어준다.

	(유저 테이블)
	이름	나이	우편번호	주소
	김사과	10	1000	역삼동
	반하나	20	1001	사당동
	이체리	30	2001	분당구


	상품명	상품가격
	바지	1000
	양말	500
	바나나	2000
	필터	1000
	오리	2000
	낭만	3000

3차 정규화
	하나의 컬럼은 그 외 다른 컬럼을 결정할 수 없다.

	(유저 테이블)
	이름	나이	우편번호	
	김사과	10	1000	
	반하나	20	1001	
	이체리	30	2001	
	차두리	40	1000	

	(주소 테이블)
	우편번호	시	구	동
	1000	서울시	강남구	역삼동
	1001	서울시	동작구	사당동
	2001	성남시	분당구	금곡동

반정규화
	활용하는 단계에서 정규화를 진행하지 않는게 더 편리하다면 반(반대)정규화를 거친다.

	1	바지
	2	양말

	주문
	아이디	상품번호
	apple	1,2

	"1,2".split(",")[1]
-------------------------------------------------------------------------
DML
	Data Manipulation Language
	데이터 조작어
	실질적으로 데이터들을 CRUD 하는 언어

	데이터 추가
		INSERT INTO 테이블명 {(컬럼명1, 컬럼명2, ...)}
		VALUES(값1, 값2, ...);

	데이터 삭제
		DELETE FROM 테이블명 WHERE 조건식;

	데이터 수정
		UPDATE 테이블명
		SET 수정할컬럼 = 새로운값
		WHERE 조건식;

	데이터 조회
		SELECT 컬럼명1, 컬럼명2, ... FROM 테이블명
		WHERE 조건식

조건식
	=	: 같다
	!=, <>	: 다르다
	AND	: &&
	OR	: ||

















